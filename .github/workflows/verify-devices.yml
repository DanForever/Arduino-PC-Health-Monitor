name: Verify Devices

on:
  push:
    paths:
      - 'Device/**'

  workflow_dispatch:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      upload-url:
        type: string
        required: true

jobs:
  Teensy32:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        screen-driver: ["IDENTITY_S_ILI9341", "IDENTITY_S_ILI9488", "IDENTITY_S_ILI9486"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: |
          echo "Github Event name: ${{ github.event_name }}"

      - name: Version
        id: version
        uses: ./.github/actions/resolve-version
        with:
          version: ${{ inputs.version }}

      - name: Build Teensy 3.2
        id: build-teensy32
        uses: ./.github/actions/teensy32
        with:
          screen-driver: ${{ matrix.screen-driver }}
          version: ${{ steps.version.outputs.version }}

      - name: Upload
        id: upload
        if: ${{ github.event_name == 'workflow_call' }}
        uses: ./.github/actions/upload-device
        with:
          upload-url: ${{ inputs.upload-url }}
          microcontroller: teensy32
          screen-define: ${{ matrix.screen-driver }}
          binary-path: ${{ steps.build-teensy32.outputs.binary-path }}

  Teensy40:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        screen-driver: ["IDENTITY_S_ILI9341", "IDENTITY_S_ILI9488", "IDENTITY_S_ILI9486"]
    steps:
      - name: Checkout
        if: ${{ github.event_name != 'workflow_call' }}
        uses: actions/checkout@v3

      - name: Version
        id: version
        uses: ./.github/actions/resolve-version
        with:
          version: ${{ inputs.version }}
        
      - name: Build Teensy 4.0
        id: build-teensy40
        uses: ./.github/actions/teensy40
        with:
          screen-driver: ${{ matrix.screen-driver }}
          version: ${{ steps.version.outputs.version }}

      - name: Upload
        id: upload
        if: ${{ github.event_name == 'workflow_call' }}
        uses: ./.github/actions/upload-device
        with:
          upload-url: ${{ inputs.upload-url }}
          microcontroller: teensy40
          screen-define: ${{ matrix.screen-driver }}
          binary-path: ${{ steps.build-teensy40.outputs.binary-path }}

  Xiao2040:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        screen-driver: ["IDENTITY_S_ILI9488"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Version
        id: version
        uses: ./.github/actions/resolve-version
        with:
          version: ${{ inputs.version }}

      - name: Build Seeeduino Xiao RP2040
        id: build-xiao2040
        uses: ./.github/actions/xiao2040
        with:
          screen-driver: ${{ matrix.screen-driver }}
          version: ${{ steps.version.outputs.version }}

      - name: Upload
        id: upload
        if: ${{ github.event_name == 'workflow_call' }}
        uses: ./.github/actions/upload-device
        with:
          upload-url: ${{ inputs.upload-url }}
          microcontroller: xiao2040
          screen-define: ${{ matrix.screen-driver }}
          binary-path: ${{ steps.build-xiao2040.outputs.binary-path }}